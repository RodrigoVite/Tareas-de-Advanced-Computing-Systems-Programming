#obj-m += tarea-1.o
#obj-m += tarea-2.o
obj-m += boleta.o
#obj-m += tarea-4.o
obj-m += boleta2.o

all:
#	Para compilar el m贸dulo de kernel en PC con Ubuntu:
#	make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modules

#	Para compilar el m贸dulo de kernel con el compilador cruzado para la Raspberry PI  4:
#	make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -C /home/rodrigo/linux M=$(PWD) modules
#	make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -C /home/$(USER)/linux M=$(PWD) modules
	make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -C ~/linux M=$(PWD) modules

clean:
#	Para compilar el m贸dulo de kernel en PC con Ubuntu:
#	make -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean

#	Para compilar el m贸dulo de kernel con el compilador cruzado para la Raspberry PI 4:
#	make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -C /home/rodrigo/linux M=$(PWD) clean
#	make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -C /home/$(USER)/linux M=$(PWD) clean
	make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -C ~/linux M=$(PWD) clean

compilar:
	gcc aplicacion5.c -o app